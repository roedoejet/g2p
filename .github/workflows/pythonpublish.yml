# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package
on:
  push:
    branches: [ release ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # fetch all commits/branches
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -e .
    - name: Install documentation dependencies
      run: |
        pip install -r docs/requirements.txt
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build --sdist --wheel
        twine upload dist/*
    - name: trigger convertextract build
      run: |
        curl --location --request POST 'https://api.github.com/repos/roedoejet/convertextract/dispatches' \
        --header 'Accept: application/vnd.github.everest-preview+json' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer ${{ secrets.G2P_PAT }}' \
        --header 'Content-Type: text/plain' \
        --data-raw '{
          "event_type": "g2p-published",
          "client_payload": {}
        }'
    - name: Determine tag
      id: determine_tag
      run: |
        echo "TAG_VERSION=$(ls dist/g2p-*.tar.gz | sed -e 's/.*g2p-//' -e 's/.tar.gz.*//')" >> $GITHUB_OUTPUT
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.determine_tag.outputs.TAG_VERSION }}
        create_annotated_tag: true
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
    - name: Setup doc deploy
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
    - name: Deploy docs with mike ðŸš€
      run: |
        mkdocs build
        mike deploy --push --update-aliases latest ${{ steps.tag_version.outputs.new_tag }} stable
