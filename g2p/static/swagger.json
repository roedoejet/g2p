{"openapi": "3.0.0", "info": {"title": "Simple G2P API", "description": "A simple API for the G2P module", "contact": {"email": "hello@aidanpine.ca"}, "license": {"name": "MIT", "url": "https://github.com/roedoejet/g2p/blob/main/LICENSE"}, "version": "1.0.1"}, "servers": [{"url": "https://g2p-studio.herokuapp.com/api/v1", "description": "G2P Studio Online"}, {"url": "http://localhost:5000/api/v1", "description": "Local Host"}], "tags": [{"name": "ancestors", "description": "Find which mappings can convert to a given node"}, {"name": "descendants", "description": "Find which mappings can be converted to from a given node"}, {"name": "g2p", "description": "Transduced, g2p'ed forms"}, {"name": "langs", "description": "Languages/mappings available for G2P"}], "paths": {"/ancestors/{node}": {"get": {"tags": ["ancestors"], "summary": "get all ancestors of node", "description": "Get the valid ancestors in the network's path to a given node. These are all the mappings that you can convert *from* in order to get the given node.\n", "operationId": "getAncestors", "parameters": [{"name": "node", "in": "path", "description": "language node name", "required": true, "style": "simple", "explode": false, "schema": {"$ref": "#/components/schemas/Langs"}}], "responses": {"200": {"description": "The valid ancestors of a node", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}}}}}, "404": {"description": "No node with that name."}}}}, "/descendants/{node}": {"get": {"tags": ["descendants"], "summary": "get all descendants of node", "description": "Get the valid descendants in the network's path to a given node. These are all the mappings that you can convert *to* from the given node.\n", "operationId": "getDescendants", "parameters": [{"name": "node", "in": "path", "description": "language node name", "required": true, "style": "simple", "explode": false, "schema": {"$ref": "#/components/schemas/Langs"}}], "responses": {"200": {"description": "The valid descendants of a node", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}}}}}, "404": {"description": "No node with that name."}}}}, "/langs": {"get": {"tags": ["langs"], "summary": "find all possible languages in g2p", "description": "By passing in the appropriate options, you can find available mappings\n", "operationId": "searchTable", "responses": {"200": {"description": "search results matching criteria", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Langs"}}}}}}}}, "/g2p": {"get": {"tags": ["g2p"], "summary": "get g2p'ed form", "description": "Get the converted version of a string, given an input and output lang\n", "operationId": "convertString", "parameters": [{"name": "in-lang", "in": "query", "description": "input lang of string", "required": true, "style": "form", "explode": true, "schema": {"$ref": "#/components/schemas/Langs"}}, {"name": "out-lang", "in": "query", "description": "output lang of string", "required": true, "style": "form", "explode": true, "schema": {"$ref": "#/components/schemas/Langs"}}, {"name": "text", "in": "query", "description": "string to convert", "required": true, "style": "form", "explode": true, "schema": {"type": "string"}}, {"name": "index", "in": "query", "description": "return indices", "required": false, "style": "form", "explode": true, "schema": {"type": "boolean"}}, {"name": "debugger", "in": "query", "description": "return debugging information", "required": false, "style": "form", "explode": true, "schema": {"type": "boolean"}}, {"name": "tokenize", "in": "query", "description": "tokenize before transducing", "required": false, "style": "form", "explode": true, "schema": {"type": "boolean"}}], "responses": {"200": {"description": "The converted text", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}}}}}, "400": {"description": "There is no path between the in-lang and out-lang"}, "404": {"description": "Either the in-lang or out-lang aren't valid Langs"}}}}}, "components": {"schemas": {"Langs": {"type": "string", "enum": ["alq", "alq-ipa", "atj", "atj-ipa", "ckt", "ckt-ipa", "clc", "clc-doulos", "crg-dv", "crg-ipa", "crg-tmd", "crj", "crj-equiv", "crj-ipa", "crk", "crk-ipa", "crk-no-symbols", "crl", "crl-equiv", "crl-ipa", "crm", "crm-equiv", "crm-ipa", "crx-sro", "crx-syl", "csw", "csw-equiv", "csw-ipa", "ctp", "ctp-ipa", "dan", "dan-ipa", "dummy", "dummy-eng-arpabet", "eng", "eng-arpabet", "eng-ipa", "fin", "fin-ipa", "fn-unicode", "fn-unicode-font", "fra", "fra-ipa", "git", "git-apa", "git-equiv", "git-ipa", "gla", "gla-ipa", "gwi", "gwi-equiv", "gwi-ipa", "haa", "haa-equiv", "haa-ipa", "hamming-dummy", "hamming-dummy-eng-arpabet", "hamming-eng-arpabet", "hamming-eng-ipa", "hei", "hei-doulos", "hei-times-font", "ikt", "ikt-ipa", "iku", "iku-equiv", "iku-ipa", "iku-sro", "iku-sro-ipa", "ipa", "kkz", "kkz-ipa", "kwk-boas", "kwk-ipa", "kwk-napa", "kwk-napa-ubc", "kwk-napa-ubc-con", "kwk-napa-uvic", "kwk-napa-uvic-con", "kwk-umista", "kwk-umista-con", "lml", "lml-ipa", "mic", "mic-ipa", "moe", "moe-ipa", "moh", "moh-equiv", "moh-festival", "moh-ipa", "nav", "nav-times-font", "oji", "oji-ipa", "oji-syl", "oka", "oka-equiv", "oka-ipa", "see", "see-ipa", "srs", "srs-ipa", "str", "str-equiv", "str-ipa", "tau", "tau-equiv", "tau-ipa", "tce", "tce-equiv", "tce-ipa", "tgx", "tgx-ipa", "tli", "tli-equiv", "tli-ipa", "ttm", "ttm-equiv", "ttm-ipa", "und", "und-ascii", "und-ipa", "win", "win-ipa"]}}}}
